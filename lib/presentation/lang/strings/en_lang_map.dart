part of '../app_localization.dart';

const Map<String, String> _enLangMap = {
  "We've sent a verification code to the email {email}":
      "We've sent a verification code to the email\n{email}",
  "Can't get your location. Please enable location and try again.":
      "Can't get your location. \nPlease enable location and try again.",
  "Location permission is denied. Please allow location access and try again.":
      "Location permission is denied. \nPlease allow location access and try again.",
  "sexualContent": "Sexual Content",
  "your account has been blocked": "Your account has been blocked, please contact us for more details.",
  "Token not valid": "You are Unauthorized. Please logout and login again.",
  "unverified email": "Please verify your email address to continue.",
  "harassment": "Harassment",
  "spam": "Spam",
  "superDeluxe": "super deluxe",
  "hateSpeech": "Hate Speech",
  "violence": "Violence",
  "scam": "Scam",
  "fakeInformation": "Fake Information",
  "m2": "mÂ²",
  "yes_has_parking": "Parking",
  "yes_has_elevator": "Elevator",
  "yes_has_alternative_power": "Alternative Power",
  "yes_has_garage": "Garage",
  "yes_furnished": "Furnished",
  "yes_has_warehouse": "Warehouse",
  "yes_has_ac": "AC",
  "yes_has_bathroom": "Bathroom",
  "Discover Your Dream Property": "Discover Your \nDream Property",
  "Find the perfect property with ease. Explore, compare and connect with trusted agents all in one app":
      "Find the perfect property with ease. Explore, compare and connect with trusted agents all in one app",


  "user_id": "User",
  "filters": "Filters",
  "plan_id": "Plan",
  "ad_id": "Ad",
  "reason": "Reason",
  "description": "Description",
  "blocked_id": "Blocked user",
  "days": "Days",

  "first_name": "First Name",
  "last_name": "Last Name",
  "password": "Password",
  "email": "Email",
  "phone_number": "Phone Number",
  "fcm_token": "FCM Token",
  "role_id": "Role",

  "type": "Property type",
  "min_price": "Minimum price",
  "max_price": "Maximum price",
  "min_area": "Minimum area",
  "max_area": "Maximum area",
  "num": "Number",
  "property_id": "Property ID",
  "all": "All",
  "ads": "Ads",
  "ads.*": "Ad",

  "data.floor": "Floor",
  "data.rooms": "Rooms",
  "data.bathrooms": "Bathrooms",
  "data.meeting_rooms": "Meeting rooms",
  "data.has_parking": "Parking",
  "data.furnished": "Furnished",

  "data.ShopType": "Shop type",
  "data.ShopType.*": "Shop type (item)",
  "data.has_warehouse": "Warehouse",
  "data.has_bathroom": "Bathroom",
  "data.has_ac": "Air conditioning",

  "data.LandType": "Land type",
  "data.LandType.*": "Land type (item)",
  "data.is_inside_master_plan": "Inside master plan",
  "data.is_serviced": "Serviced",
  "data.slope": "Land slope",
  "data.slope.*": "Land slope (item)",

  "data.min_floor": "Minimum floor",
  "data.max_floor": "Maximum floor",
  "data.min_rooms": "Minimum rooms",
  "data.max_rooms": "Maximum rooms",
  "data.min_bathrooms": "Minimum bathrooms",
  "data.min_bedrooms": "Minimum bedrooms",
  "data.has_elevator": "Elevator",
  "data.has_alternative_power": "Alternative power",
  "data.has_garage": "Garage",
  "data.furnished_type": "Furnished type",
  "data.furnished_type.*": "Furnished type (item)",

  "property.user_id": "User",
  "property.area": "Area",
  "property.name": "Name",
  "property.description": "Description",
  "property.price": "Price",
  "property.image": "Images",
  "property.image.*": "Image file",
  "property.latitude": "Latitude",
  "property.longitude": "Longitude",
  "property.address": "Address",
  "data.type": "Type",

  "required": "{attribute} is required",
  "string": "{attribute} must be a string",
  "max": "{attribute} must not exceed :max characters",
  "min": "{attribute} must be at least :min",
  "unique": "{attribute} has already been taken",
  "confirmed": "{attribute} confirmation does not match",
  "regex": "{attribute} format is invalid",

  "integer": "{attribute} must be an integer",
  "boolean": "{attribute} must be true or false",
  "array": "{attribute} must be an array",
  "numeric": "{attribute} must be a number",
  "in": "The selected {attribute} is invalid",
  "exists": "{attribute} does not exist",
  "nullable": "{attribute} may be empty",
  "sometimes": "{attribute} is optional",
  "json": "{attribute} must be a valid JSON string",

  "date": "{attribute} must be a valid date",
  "after": "{attribute} must be a date after :date",
  "before": "{attribute} must be a date before :date",

  "mimes": "{attribute} must be a file of type: :values",
  "image": "{attribute} must be an image",
  "between": "{attribute} must be between :min and :max",
};
