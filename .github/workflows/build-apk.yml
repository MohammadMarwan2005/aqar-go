name: Flutter CI/CD

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.35.1'
  NODE_VERSION: '20'
  ANDROID_HOME: /usr/local/lib/android/sdk
  NDK_VERSION: '29.0.13113456'

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Cache pub packages & build outputs
      - name: Cache Flutter packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            build/
          key: ${{ runner.os }}-flutter-pub-cache-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-flutter-pub-cache-

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Install dependencies
        run: flutter pub get

      - name: Flutter doctor
        run: flutter doctor -v

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Decode Keystore and Setup key.properties
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        run: |
          echo "$KEYSTORE_BASE64" | base64 -d > ./my-release-key.keystore
          echo -e "storePassword=$KEYSTORE_PASSWORD\nkeyPassword=$KEY_PASSWORD\nkeyAlias=$KEY_ALIAS\nstoreFile=$(pwd)/my-release-key.keystore" > android/key.properties
          ls -l android/
          cat android/key.properties

      - name: Create .env file from GitHub secret
        run: echo "${{ secrets.MY_ENV_FILE }}" > .env

      # Install NDK + accept licenses
      - name: Install required Android SDK components
        run: |
          yes | sdkmanager --licenses
          sdkmanager "ndk;${NDK_VERSION}"
        env:
          PATH: $ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH

      - name: Build APK
        run: flutter build apk --release

      - name: Upload APK as artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk
          retention-days: 1

      - name: Authenticate and Deploy to Firebase App Distribution
        if: github.ref == 'refs/heads/master'
        env:
          FIREBASE_CREDENTIALS: ${{ secrets.FIREBASE_CREDENTIALS }}
        run: |
          echo "$FIREBASE_CREDENTIALS" > firebase_credentials.json
          export GOOGLE_APPLICATION_CREDENTIALS="$(pwd)/firebase_credentials.json"
          firebase appdistribution:distribute build/app/outputs/flutter-apk/app-release.apk \
            --app "1:759335379864:android:6bed5dad18690c487401ed" \
            --groups "Team" \
            --release-notes "ðŸš€ New release from GitHub CI/CD"
