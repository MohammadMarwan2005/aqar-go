name: Flutter CI/CD

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.29.3'
  NODE_VERSION: '20'

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache Flutter packages
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-flutter-pub-cache-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-flutter-pub-cache-

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Install dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --release

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-npm-cache
          restore-keys: ${{ runner.os }}-node-

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Authenticate and Deploy to Firebase App Distribution
        env:
          FIREBASE_CREDENTIALS: ${{ secrets.FIREBASE_CREDENTIALS }}
        run: |
          echo "$FIREBASE_CREDENTIALS" > firebase_credentials.json
          export GOOGLE_APPLICATION_CREDENTIALS="$(pwd)/firebase_credentials.json"
          firebase appdistribution:distribute build/app/outputs/flutter-apk/app-release.apk \
            --app "1:759335379864:android:6bed5dad18690c487401ed" \
            --groups "Team" \
            --release-notes "ðŸš€ New release from CI/CD"
